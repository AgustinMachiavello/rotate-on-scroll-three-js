{"version":3,"sources":["models/Keyboard.js","components/Loader.js","components/RotationWrapper.js","components/Overlay.js","components/GroundPlane.js","hooks/useWindowDimensions.js","App.js","reportWebVitals.js","index.js"],"names":["Keyboard","props","group","useRef","useGLTF","nodes","materials","ref","dispose","castShadow","receiveShadow","geometry","Cube001","material","NovelKeys","Cube001_1","Lime","Cube001_2","Grape","Cube001_3","Blueberry","Cube001_4","Lemon","Cube001_5","Strawberry","Cube001_6","Material","preload","Loader","progress","useProgress","Html","center","style","color","toFixed","RotationWrapper","useFrame","state","delta","current","rotation","y","THREE","degToRad","scroll","position","children","Overlay","forwardRef","caption","onScroll","e","window","innerWidth","target","scrollTop","scrollHeight","innerHeight","scrollLeft","scrollWidth","grad","innerText","Math","abs","className","href","GroundPlane","attach","args","transparent","opacity","getWindowDimensions","width","height","App","overlay","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","backgroundColor","shadows","adjustCamera","onCreated","events","connect","intensity","fallback","PI","scale","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a53470f.chunk.js","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Keyboard(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Keyboard.gltf')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube001.geometry}\n        material={materials.NovelKeys}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube001_1.geometry}\n        material={materials.Lime}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube001_2.geometry}\n        material={materials.Grape}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube001_3.geometry}\n        material={materials.Blueberry}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube001_4.geometry}\n        material={materials.Lemon}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube001_5.geometry}\n        material={materials.Strawberry}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube001_6.geometry}\n        material={materials.Material}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload('/Keyboard.gltf')\n","import { Html, useProgress } from \"@react-three/drei\";\n\nexport default function Loader() {\n    const { progress } = useProgress();\n    return <Html center style={{color: 'white'}}>{progress.toFixed(2)}% loading...</Html>\n}","import { useFrame } from '@react-three/fiber';\nimport React, { useRef } from 'react';\nimport * as THREE from 'three';\n\nexport default function RotationWrapper(props) {\n  // This reference will give us direct access to the THREE.Mesh object\n  const group = useRef();\n\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => {\n    group.current.rotation.y = THREE.MathUtils.degToRad((props.scroll.current * 360) / 1)\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group position={[0, 0, 0]}>\n          {props.children}\n      </group>\n    </group>\n  )\n}\n","import React, { forwardRef } from 'react';\n\nconst Overlay = forwardRef(({ caption, scroll }, ref) => (\n    <div\n        ref={ref}\n        onScroll={(e) => {\n            if (window.innerWidth > 800) {\n                scroll.current = e.target.scrollTop / (e.target.scrollHeight - window.innerHeight)\n            } else {\n                scroll.current = -e.target.scrollLeft / (e.target.scrollWidth - window.innerWidth)   \n            }\n            let progress = scroll.current.toFixed(2)\n            let grad = ((progress * 360) / 1).toFixed(0)\n            caption.current.innerText = `${Math.abs(grad)}°`\n        }}\n        className=\"scroll\">\n        <div className=\"slide\">\n            0°\n        </div>\n        <div className=\"slide\">\n            90°\n        </div>\n        <div className=\"slide\">\n            180°\n        </div>\n        <div className=\"slide\">\n            270°\n        </div>\n        <span className=\"caption\" ref={caption}>\n            0°\n        </span>\n        <a className=\"model-link\" href=\"https://skfb.ly/6Z9MU\" target=\"_blank\">\n            Model by sleepyjoshua\n        </a>\n    </div>\n))\n\nexport default Overlay;","import React from \"react\";\n\nexport default function GroundPlane(props) {\n    return (\n        <group {...props}>\n            <mesh receiveShadow >\n                <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n                <shadowMaterial attach=\"material\" transparent opacity={0.4}/>\n            </mesh>\n        </group>\n    );\n}","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { Suspense, useRef } from \"react\";\nimport { Canvas } from '@react-three/fiber';\n\nimport Keyboard from \"./models/Keyboard\";\n\nimport Loader from \"./components/Loader\";\nimport RotationWrapper from \"./components/RotationWrapper\";\nimport Overlay from \"./components/Overlay\";\nimport GroundPlane from \"./components/GroundPlane\";\n\nimport useWindowDimensions from \"./hooks/useWindowDimensions\";\n\nfunction App() {\n  const overlay = useRef();\n  const caption = useRef();\n  const scroll = useRef(0);\n\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <>\n      <div style={{width: '100%', height: '100%', backgroundColor: 'white'}}>\n\n\n        <div className=\"helper\">\n          {width > 800 ? 'Scroll' : 'Swipe left'}\n        </div>\n\n        <Canvas\n          shadows\n          adjustCamera\n          onCreated={(state) => state.events.connect(overlay.current)}>\n\n          {/* Start Lights */}\n          <fog attach=\"fog\" args={[\"white\", 0, 40]} />\n          <ambientLight intensity={0.4}/>\n          <directionalLight\n            castShadow\n            position={[2.5, 8, 5]}\n            intensity={1.5}\n            shadow-mapSize-width={1024}\n            shadow-mapSize-height={1024}\n            shadow-camera-far={50}\n            shadow-camera-left={-10}\n            shadow-camera-right={10}\n            shadow-camera-top={10}\n            shadow-camera-bottom={-10}\n          />\n          <pointLight position={[-10, 0, -20]} color=\"red\" intensity={2.5} />\n          <pointLight position={[0, -10, 0]} intensity={1.5} />\n          {/* End Lights */}\n\n\n          {/* Start Scene objects */}\n          <Suspense fallback={<Loader />}>\n            <GroundPlane position={[0, -0.7, 0]} rotation={[-Math.PI / 2, 0, 0]}/>\n            <RotationWrapper scroll={scroll}>\n              <Keyboard position={[0, 0, 0]} rotation={[0.25, 0, 0]} scale={[15, 15, 15]}/>\n            </RotationWrapper>\n          </Suspense>\n          {/* End Scene objects */}\n\n        </Canvas>\n      </div>\n\n      <Overlay ref={overlay} caption={caption} scroll={scroll} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './styles.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}